services:
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./rules.yml:/etc/prometheus/rules.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml" # fichier de configuration
      - "--storage.tsdb.path=/prometheus" 
      - "--storage.tsdb.retention.time=15d" 
      - "--web.enable-lifecycle" # permet de recharger la configuration sans redémarrer le conteneur
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    networks:
      - monitoring
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    deploy:
      resources:
        limits:
          memory: 1G 
    networks:
      - monitoring
    restart: always

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    privileged: true
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro 
      - /var/run:/var/run:rw 
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - monitoring

  portainer:
    image: portainer/portainer-ce
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - monitoring
    restart: always

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro #proc de l'hôte monter en lecture, proc: sytème de fichier virtuel contient les infos en réel sur les processus
      - /sys:/host/sys:ro # lecture
      - /:/rootfs:ro # lecturedu système de fichier racine
    command:
      - "--path.procfs=/host/proc" #sf proc chemin hôte
      - "--path.sysfs=/host/sys"
      - "--path.rootfs=/rootfs"
    deploy:
      resources:
        limits:
          memory: 128M
    networks:
      - monitoring
    restart: always

networks:
  monitoring:
  app-network:
    external: true
    name: docker-project_app-network

volumes:
  prometheus_data:
  grafana_data:
  portainer_data:
